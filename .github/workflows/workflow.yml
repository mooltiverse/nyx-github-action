# The Nyx GitHub Action CI pipeline running on GitHub Actions

name: Nyx GitHub Action workflow
on: [push]
# Avoid running multiple pipelines concurrently to avoid overlapping releases and tags
concurrency:
  group: project
  cancel-in-progress: false

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.nyx.outputs.branch }}
      bump: ${{ steps.nyx.outputs.bump }}
      coreVersion: ${{ steps.nyx.outputs.coreVersion }}
      latestVersion: ${{ steps.nyx.outputs.latestVersion }}
      newRelease: ${{ steps.nyx.outputs.newRelease }}
      newVersion: ${{ steps.nyx.outputs.newVersion }}
      scheme: ${{ steps.nyx.outputs.scheme }}
      timestamp: ${{ steps.nyx.outputs.timestamp }}
      previousVersion: ${{ steps.nyx.outputs.previousVersion }}
      primeVersion: ${{ steps.nyx.outputs.primeVersion }}
      version: ${{ steps.nyx.outputs.version }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    # Run a quick test (although it's shallow)
    - name: Test the Action
      id: nyx
      # Run the action directly from the checked out repository to make sure we're testing the one that has been pushed
      uses: ./
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        command: 'infer'
        verbosity: 'DEBUG'
        preset: 'extended'
        releaseLenient: 'true'
        stateFile: '.nyx-state.json'
        summaryFile: '.nyx-summary.txt'
    - name: Print version # This step uses the version inferred by Nyx
      run: echo the inferred version is ${{ steps.nyx.outputs.version }}

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Publish the Action with Nyx
      id: nyx
      # Run the action directly from the checked out repository to make sure we're testing the one that has been pushed
      uses: ./
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        command: 'publish'

